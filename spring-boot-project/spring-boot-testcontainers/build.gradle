plugins {
	id "java-library"
	id "org.springframework.boot.auto-configuration"
	id "org.springframework.boot.configuration-properties"
	id "org.springframework.boot.deployed"
	id "org.springframework.boot.docker-test"
	id "org.springframework.boot.optional-dependencies"
}

description = "Spring Boot Testcontainers Support"

dependencies {
	api(project(":spring-boot-project:spring-boot-autoconfigure"))
	api("org.testcontainers:testcontainers")

	dockerTestImplementation(project(":spring-boot-project:spring-boot-test"))
	dockerTestImplementation(project(":spring-boot-project:spring-boot-tools:spring-boot-test-support-docker"))
	dockerTestImplementation("ch.qos.logback:logback-classic")
	dockerTestImplementation("co.elastic.clients:elasticsearch-java") {
		exclude group: "commons-logging", module: "commons-logging"
	}
	dockerTestImplementation("com.couchbase.client:java-client")
	dockerTestImplementation("com.hazelcast:hazelcast")
	dockerTestImplementation("io.micrometer:micrometer-registry-otlp")
	dockerTestImplementation("io.rest-assured:rest-assured") {
		exclude group: "commons-logging", module: "commons-logging"
	}
	dockerTestImplementation("org.apache.activemq:activemq-client")
	dockerTestImplementation("org.apache.activemq:artemis-jakarta-client") {
		exclude group: "commons-logging", module: "commons-logging"
	}
	dockerTestImplementation("org.apache.cassandra:java-driver-core") {
		exclude group: "org.slf4j", module: "jcl-over-slf4j"
	}
	dockerTestImplementation("org.assertj:assertj-core")
	dockerTestImplementation("org.awaitility:awaitility")
	dockerTestImplementation("org.flywaydb:flyway-core")
	dockerTestImplementation("org.junit.jupiter:junit-jupiter")
	dockerTestImplementation("org.junit.platform:junit-platform-launcher")
	dockerTestImplementation("org.liquibase:liquibase-core") {
		exclude(group: "javax.xml.bind", module: "jaxb-api")
	}
	dockerTestImplementation("org.mockito:mockito-core")
	dockerTestImplementation("org.springframework:spring-core-test")
	dockerTestImplementation("org.springframework:spring-jdbc")
	dockerTestImplementation("org.springframework:spring-jms")
	dockerTestImplementation("org.springframework:spring-r2dbc")
	dockerTestImplementation("org.springframework.amqp:spring-rabbit")
	dockerTestImplementation("org.springframework.data:spring-data-redis")
	dockerTestImplementation("org.springframework.kafka:spring-kafka")
	dockerTestImplementation("org.springframework.ldap:spring-ldap-core")
	dockerTestImplementation("org.springframework.pulsar:spring-pulsar")
	dockerTestImplementation("org.testcontainers:junit-jupiter")

	dockerTestRuntimeOnly("com.oracle.database.r2dbc:oracle-r2dbc")
	dockerTestRuntimeOnly("com.zaxxer:HikariCP")
	dockerTestRuntimeOnly("io.lettuce:lettuce-core")
	dockerTestRuntimeOnly("org.flywaydb:flyway-database-postgresql")
	dockerTestRuntimeOnly("org.postgresql:postgresql")

	optional(project(":spring-boot-project:spring-boot-actuator-autoconfigure"))
	optional("org.springframework:spring-test")
	optional("org.springframework.data:spring-data-mongodb")
	optional("org.springframework.data:spring-data-neo4j")
	optional("org.testcontainers:activemq")
	optional("org.testcontainers:cassandra")
	optional("org.testcontainers:clickhouse")
	optional("org.testcontainers:couchbase")
	optional("org.testcontainers:elasticsearch")
	optional("org.testcontainers:grafana")
	optional("org.testcontainers:jdbc")
	optional("org.testcontainers:kafka")
	optional("org.testcontainers:mariadb")
	optional("org.testcontainers:mongodb")
	optional("org.testcontainers:mssqlserver")
	optional("org.testcontainers:mysql")
	optional("org.testcontainers:neo4j")
	optional("org.testcontainers:oracle-xe")
	optional("org.testcontainers:oracle-free")
	optional("org.testcontainers:postgresql")
	optional("org.testcontainers:pulsar")
	optional("org.testcontainers:rabbitmq")
	optional("org.testcontainers:redpanda")
	optional("org.testcontainers:r2dbc")
	optional("com.redis:testcontainers-redis")
	optional("com.hazelcast:hazelcast")

	testImplementation(project(":spring-boot-project:spring-boot-test"))
	testImplementation(project(":spring-boot-project:spring-boot-tools:spring-boot-test-support"))
	testImplementation("org.assertj:assertj-core")
	testImplementation("org.junit.jupiter:junit-jupiter")
	testImplementation("org.mockito:mockito-core")
	testImplementation("org.mockito:mockito-junit-jupiter")
	testImplementation("org.springframework:spring-core-test")
	testImplementation("org.springframework:spring-jdbc")
	testImplementation("org.springframework:spring-jms")
	testImplementation("org.springframework:spring-r2dbc")
	testImplementation("org.springframework.amqp:spring-rabbit")
	testImplementation("org.springframework.data:spring-data-redis")
	testImplementation("org.springframework.kafka:spring-kafka")
	testImplementation("org.springframework.pulsar:spring-pulsar")
	testImplementation("org.testcontainers:junit-jupiter")
}

dockerTest {
	jvmArgs += "--add-opens=java.base/java.util.concurrent=ALL-UNNAMED"
}
